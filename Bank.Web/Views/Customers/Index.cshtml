@model CustomerListViewModel

@{
    ViewData["Title"] = "Bank - Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="customers">
    <h4>Customers</h4>
    <a asp-controller="Customers" asp-action="CreateCustomer" class="btn btn-primary mb-3">New</a>

    @using (Html.BeginForm("Index", "Customers", FormMethod.Get))
    {
        @Html.TextBox("SearchQuery", Model.CurrentFilter as string,
        new { @class = "form-control w-100", @placeholder = "Search customer by name and city" })
        <input type="submit" value="Search" class="btn btn-primary my-1 mb-3" />
    }

    @if (Model.SearchQuery != null)
    {
        <h4 class="text-center mb-4">Your search on "@Model.SearchQuery" resulted in @Model.Customers.TotalItemCount hits</h4>
    }

    @if (Model.Customers.TotalItemCount >= 1)
    {
        <table class="table table-bordered table-responsive-sm">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">
                        @Html.ActionLink("Name", "Index", "Customers",
                        new { sortOrder = Model.SortingParameters.Name, currentFilter = Model.CurrentFilter })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("Address", "Index", "Customers",
                        new { sortOrder = Model.SortingParameters.Address, currentFilter = Model.CurrentFilter })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("City", "Index", "Customers", 
                        new { sortOrder = Model.SortingParameters.City, currentFilter = Model.CurrentFilter })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("Country", "Index", "Customers", 
                        new { sortOrder = Model.SortingParameters.Country, currentFilter = Model.CurrentFilter })
                    </th>
                    <th scope="col">Details</th>
                </tr>
            </thead>
            @foreach (var customer in Model.Customers)
            {
                <tbody>
                    <tr>
                        <td>@customer.Fullname</td>
                        <td>@customer.Address</td>
                        <td>@customer.City</td>
                        <td>@customer.Country</td>
                        <td>
                            <a asp-controller="Customers"
                               asp-action="CustomerProfile"
                               asp-route-id="@customer.CustomerId">Details</a>
                        </td>
                    </tr>
                </tbody>
            }
        </table>
        <p>Page @(Model.Customers.PageCount < Model.Customers.PageNumber ? 0 : Model.Customers.PageNumber) of @Model.Customers.PageCount</p>

        @Html.PagedListPager((IPagedList)Model.Customers, page => Url.Action("Index",
        new { page, sortOrder = Model.SortingParameters.Current, currentFilter = Model.CurrentFilter }),
        new PagedListRenderOptionsBase
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            MaximumPageNumbersToDisplay = 5,
            DisplayEllipsesWhenNotShowingAllPageNumbers = false
        })
    }
</div>
